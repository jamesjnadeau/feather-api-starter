var _ = require('lodash');
var mongoose = require('mongoose');

var schema = {
  schema: {
    name: { //original files name
      type: String,
    },
    prefix: {
      type: String,
      quired: '{PATH} is required!',
    },
    size: { //original files name
      type: Object,
    },
    status: {
      type: String,
      default: ['new'],
      enum: ['new', //file just created, but not uploaded to s3
        'uploaded', //file has been uploaded to s3
        'delete'], //file has been marked to be deleted
    },
    updated_at: {
      type: Date,
      default: new Date(),
    },
    created_at: {
      type: Date,
      default: new Date(),
    },
  },
  methods: {
  },
  statics: {
  },
  virtuals: {
    'relPath': function() {
      return this.prefix+'/'+this._id.toHexString();
    }
  },
  indexes: [
  ],
  // Hooks
  before:{
    //all: [outputContentToFile],
    //find: [outputContentToFile],
    //get: [authHooks.queryWithUserId],
    // These will be executed in the order listed
    //create: [authHooks.setUserId, hooks.log],
    //update: [outputContentToFile],
    //patch: [outputContentToFile],
    //remove: [authHooks.setUserId]
  },
  after:{
    //all: [],
    //find: [hooks.log],
    //get: [],
    //create: [outputContentToFile],
    //update: [outputContentToFile],
    //patch: [outputContentToFile],
    //remove: []
  },

  //add custom endpoints here, see https://github.com/feathersjs/feathers/pull/91
  /*_setup: function(app, path) {
    var self = this;
    var model = this.model

    //Count - mostly taken from find, used to get the total count of a query.
    app.get('/' + path + '/count', function(req, res, next) {
      console.log('here');
      feathersCount(self, model, req, res, next);
    });
  }*/
};
module.exports = schema;
